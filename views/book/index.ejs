<%- include('../partials/header') %>

<!-- Thêm Flatpickr CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/airbnb.css">

<div class="min-h-screen bg-gray-50 py-12">
  <div class="max-w-3xl mx-auto">
    <% if (success === 'booked') { %>
    <!-- Màn hình đặt lịch thành công -->
    <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
      <div class="bg-gradient-to-r from-green-500 to-emerald-600 px-8 py-12 text-white text-center">
        <div class="mb-6">
          <div class="mx-auto w-16 h-16 bg-white rounded-full flex items-center justify-center">
            <i class="fas fa-check text-3xl text-green-500"></i>
          </div>
        </div>
        <h1 class="text-3xl font-bold mb-4">
          Đặt lịch thành công!
        </h1>
        <p class="text-lg opacity-90 mb-8">
          Chúng tôi đã gửi email xác nhận cho bạn
        </p>
        <div class="bg-white/10 rounded-lg p-6 backdrop-blur-sm max-w-md mx-auto">
          <div class="text-left space-y-3">
            <div class="flex items-center justify-between">
              <span class="opacity-80">Tiêu đề</span>
              <span class="font-medium"><%= link.title %></span>
            </div>
            <div class="flex items-center justify-between">
              <span class="opacity-80">Thời lượng</span>
              <span class="font-medium"><%= link.duration %> phút</span>
            </div>
            <div class="flex items-center justify-between">
              <span class="opacity-80">Người tạo</span>
              <span class="font-medium"><%= link.creator_name %></span>
            </div>
          </div>
        </div>
      </div>
      <div class="p-8 text-center">
        <p class="text-gray-600 mb-6">
          Bạn sẽ nhận được email xác nhận trong vài phút tới.<br>
          Vui lòng kiểm tra cả thư mục spam nếu không thấy email trong hộp thư đến.
        </p>
        <div class="space-x-4">
          <a href="/" 
            class="inline-flex items-center px-6 py-3 border border-gray-300 shadow-sm text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            <i class="fas fa-home mr-2"></i>
            Về trang chủ
          </a>
          <button onclick="window.print()" 
            class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            <i class="fas fa-print mr-2"></i>
            In lịch hẹn
          </button>
        </div>
      </div>
    </div>
    <% } else { %>
    <!-- Form đặt lịch hiện tại -->
    <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
      <!-- Header với gradient -->
      <div class="bg-gradient-to-r from-indigo-600 to-purple-600 px-8 py-12 text-white">
        <h1 class="text-3xl font-bold mb-2">
          <%= link.title %>
        </h1>
        <div class="flex items-center space-x-4 text-sm opacity-90">
          <div class="flex items-center">
            <i class="far fa-user mr-2"></i>
            <%= link.creator_name %>
          </div>
          <div class="flex items-center">
            <i class="far fa-clock mr-2"></i>
            <%= link.duration %> phút
          </div>
        </div>
        <% if (link.description) { %>
        <p class="mt-4 text-sm opacity-90">
          <%= link.description %>
        </p>
        <% } %>
      </div>

      <!-- Form đặt lịch -->
      <div class="p-8">
        <form id="bookingForm" class="space-y-8">
          <!-- Bước 1: Chọn ngày -->
          <div class="booking-step">
            <h2 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
              <span class="flex items-center justify-center w-8 h-8 rounded-full bg-indigo-100 text-indigo-600 text-sm mr-3">1</span>
              Chọn ngày
            </h2>
            <div class="flatpickr-wrapper">
              <input type="text" id="datetime" placeholder="Chọn ngày" required
                class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200">
            </div>
          </div>

          <!-- Bước 2: Chọn giờ -->
          <div id="availableSlots" class="booking-step hidden">
            <h2 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
              <span class="flex items-center justify-center w-8 h-8 rounded-full bg-indigo-100 text-indigo-600 text-sm mr-3">2</span>
              Chọn giờ
            </h2>
            <div class="grid grid-cols-3 md:grid-cols-4 gap-3" id="timeSlots">
              <!-- Slots sẽ được thêm vào đây -->
            </div>
          </div>

          <!-- Bước 3: Thông tin cá nhân -->
          <div id="personalInfo" class="booking-step hidden">
            <h2 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
              <span class="flex items-center justify-center w-8 h-8 rounded-full bg-indigo-100 text-indigo-600 text-sm mr-3">3</span>
              Thông tin của bạn
            </h2>
            
            <div class="space-y-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="space-y-2">
                  <label class="block text-sm font-medium text-gray-700">
                    Họ tên
                  </label>
                  <input type="text" name="name" required
                    class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200">
                </div>

                <div class="space-y-2">
                  <label class="block text-sm font-medium text-gray-700">
                    Email
                  </label>
                  <input type="email" name="email" required
                    class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200">
                </div>
              </div>

              <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700">
                  Ghi chú (không bắt buộc)
                </label>
                <textarea name="note" rows="3"
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200"></textarea>
              </div>

              <!-- Xác nhận thông tin -->
              <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                <h3 class="text-sm font-medium text-gray-900 mb-2">Xác nhận lịch hẹn</h3>
                <div class="text-sm text-gray-600 space-y-1">
                  <p id="confirmDate"></p>
                  <p id="confirmTime"></p>
                </div>
              </div>

              <button type="submit"
                class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-6 rounded-lg font-medium hover:from-indigo-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-200">
                Xác nhận đặt lịch
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
    <% } %>
  </div>
</div>

<!-- Flatpickr JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/vn.js"></script>

<script>
let selectedDate = null;
let selectedTime = null;

// Khởi tạo flatpickr với giao diện đẹp hơn
const picker = flatpickr("#datetime", {
  locale: "vn",
  dateFormat: "d/m/Y",
  minDate: "today",
  disable: [
    function(date) {
      return (date.getDay() === 0 || date.getDay() === 6);
    }
  ],
  onChange: async function(selectedDates, dateStr) {
    selectedDate = selectedDates[0];
    await loadTimeSlots(selectedDate);
  }
});

// Load time slots với animation
async function loadTimeSlots(date) {
  const timeSlotsContainer = document.getElementById('timeSlots');
  const availableSlotsDiv = document.getElementById('availableSlots');
  
  availableSlotsDiv.classList.remove('hidden');
  timeSlotsContainer.innerHTML = `
    <div class="col-span-full flex justify-center py-8">
      <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600"></div>
    </div>
  `;
  
  try {
    const response = await fetch(`/api/slots?date=${date.toISOString().split('T')[0]}&userId=<%= link.user_id %>`);
    const appointments = await response.json();
    const slots = generateTimeSlots(date, <%= link.duration %>);
    
    timeSlotsContainer.innerHTML = '';
    
    slots.forEach(slot => {
      if (!isSlotOverlap(slot, appointments)) {
        const button = document.createElement('button');
        button.type = 'button';
        button.className = 'p-4 text-center border border-gray-200 rounded-lg hover:border-indigo-500 hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-all duration-200 transform hover:-translate-y-1';
        button.textContent = slot.time;
        button.onclick = () => selectTimeSlot(slot.time, new Date(date));
        timeSlotsContainer.appendChild(button);
      }
    });

    if (timeSlotsContainer.children.length === 0) {
      timeSlotsContainer.innerHTML = `
        <div class="col-span-full text-center py-8 text-gray-500">
          <i class="far fa-calendar-times text-2xl mb-2"></i>
          <p>Không có thời gian trống trong ngày này</p>
        </div>
      `;
    }
  } catch (error) {
    console.error('Lỗi:', error);
    timeSlotsContainer.innerHTML = `
      <div class="col-span-full text-center py-8 text-red-500">
        <i class="fas fa-exclamation-circle text-2xl mb-2"></i>
        <p>Không thể tải danh sách thời gian</p>
      </div>
    `;
  }
}

// Chọn time slot với hiệu ứng
function selectTimeSlot(time, date) {
  selectedTime = time;
  document.querySelectorAll('#timeSlots button').forEach(btn => {
    btn.classList.remove('bg-indigo-600', 'text-white', 'border-indigo-600');
    if (btn.textContent === time) {
      btn.classList.add('bg-indigo-600', 'text-white', 'border-indigo-600');
    }
  });
  
  // Cập nhật thông tin xác nhận
  document.getElementById('confirmDate').textContent = `Ngày: ${date.toLocaleDateString('vi-VN')}`;
  document.getElementById('confirmTime').textContent = `Thời gian: ${time}`;
  
  // Hiển thị form với animation
  const personalInfo = document.getElementById('personalInfo');
  personalInfo.classList.remove('hidden');
  personalInfo.classList.add('animate-fade-in');
}

// Tạo danh sách các slot trong ngày
function generateTimeSlots(date, duration) {
  const slots = [];
  const startHour = 8;
  const endHour = 17;
  
  for (let hour = startHour; hour <= endHour; hour++) {
    for (let minute of [0, 30]) {
      const slotStart = new Date(date);
      slotStart.setHours(hour, minute, 0, 0);
      
      // Không tạo slot cho thời gian đã qua
      if (slotStart <= new Date()) continue;
      
      const slotEnd = new Date(slotStart.getTime() + duration * 60000);
      // Không tạo slot nếu kết thúc sau giờ làm việc
      if (slotEnd.getHours() > endHour) continue;
      
      slots.push({
        start: slotStart,
        end: slotEnd,
        time: `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`
      });
    }
  }
  return slots;
}

// Kiểm tra slot có bị trùng không
function isSlotOverlap(slot, appointments) {
  const slotStart = new Date(slot.start);
  const slotEnd = new Date(slot.end);

  return appointments.some(apt => {
    const aptStart = new Date(apt.start_time);
    const aptEnd = new Date(apt.end_time);
    return (
      (slotStart >= aptStart && slotStart < aptEnd) ||
      (slotEnd > aptStart && slotEnd <= aptEnd) ||
      (slotStart <= aptStart && slotEnd >= aptEnd)
    );
  });
}

// Xử lý submit form
document.getElementById('bookingForm').addEventListener('submit', async function(e) {
  e.preventDefault();
  
  if (!selectedDate || !selectedTime) {
    alert('Vui lòng chọn ngày và giờ');
    return;
  }
  
  const formData = new FormData(e.target);
  const bookingData = {
    name: formData.get('name'),
    email: formData.get('email'),
    date: selectedDate.toISOString().split('T')[0],
    time: selectedTime,
    note: formData.get('note')
  };

  try {
    const response = await fetch(`/book/<%= link.slug %>`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(bookingData)
    });

    if (response.ok) {
      window.location.href = `/book/<%= link.slug %>?success=booked`;
    } else {
      const error = await response.json();
      alert(error.message || 'Có lỗi xảy ra khi đặt lịch');
    }
  } catch (error) {
    console.error('Lỗi:', error);
    alert('Không thể đặt lịch. Vui lòng thử lại sau.');
  }
});
</script>

<style>
.animate-fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.flatpickr-calendar {
  border-radius: 1rem;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.flatpickr-day.selected {
  background: #4F46E5 !important;
  border-color: #4F46E5 !important;
}

.booking-step {
  transition: all 0.3s ease-in-out;
}

@media print {
  body * {
    visibility: hidden;
  }
  .bg-gradient-to-r {
    background: white !important;
    color: black !important;
  }
  .bg-white\/10 {
    background: #f3f4f6 !important;
  }
  .print-section, .print-section * {
    visibility: visible;
  }
  .no-print {
    display: none;
  }
}
</style>

<%- include('../partials/footer') %>