<%- include('../partials/header') %>

<div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
  <div class="px-4 py-6 sm:px-0">
    <div class="bg-white shadow-lg rounded-lg overflow-hidden">
      <div class="px-6 py-8">
        <h1 class="text-2xl font-bold text-gray-900 mb-2">
          <%= link.title %>
        </h1>
        <p class="text-gray-600 mb-4">
          <i class="far fa-clock mr-2"></i>
          Thời lượng: <%= link.duration %> phút
        </p>
        <% if (link.description) { %>
        <p class="text-gray-600 mb-6">
          <%= link.description %>
        </p>
        <% } %>

        <% if (success === 'booked') { %>
        <div class="mb-6 bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded-r">
          Đã đặt lịch thành công! Vui lòng kiểm tra email của bạn.
        </div>
        <% } %>

        <% if (error) { %>
        <div class="mb-6 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-r">
          <%= error === 'booking_failed' ? 'Không thể đặt lịch. Vui lòng thử lại.' : error %>
        </div>
        <% } %>

        <form action="/booking-links/book/<%= link.slug %>" method="POST" class="space-y-6">
          <div>
            <label class="block text-sm font-medium text-gray-700">Họ tên</label>
            <input type="text" name="name" required
              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">Email</label>
            <input type="email" name="email" required
              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">Ngày</label>
            <input type="date" name="date" required min="<%= new Date().toISOString().split('T')[0] %>"
              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">Thời gian</label>
            <select name="time" required
              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
              <option value="">Chọn thời gian</option>
            </select>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">Ghi chú (không bắt buộc)</label>
            <textarea name="note" rows="3"
              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"></textarea>
          </div>

          <div>
            <button type="submit"
              class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
              Đặt lịch
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
// Kiểm tra xem một slot có bị trùng với các lịch hẹn hiện tại không
function isSlotOverlap(slot, appointments) {
  const slotStart = new Date(slot.start);
  const slotEnd = new Date(slot.end);

  return appointments.some(apt => {
    const aptStart = new Date(apt.start_time);
    const aptEnd = new Date(apt.end_time);
    return (
      (slotStart >= aptStart && slotStart < aptEnd) ||
      (slotEnd > aptStart && slotEnd <= aptEnd) ||
      (slotStart <= aptStart && slotEnd >= aptEnd)
    );
  });
}

// Tạo danh sách các slot trong ngày
function generateTimeSlots(date, duration) {
  const slots = [];
  const startHour = 8;
  const endHour = 17;
  
  for (let hour = startHour; hour <= endHour; hour++) {
    for (let minute of [0, 30]) {
      const slotStart = new Date(date);
      slotStart.setHours(hour, minute, 0, 0);
      
      // Không tạo slot cho thời gian đã qua
      if (slotStart <= new Date()) continue;
      
      const slotEnd = new Date(slotStart.getTime() + duration * 60000);
      // Không tạo slot nếu kết thúc sau giờ làm việc
      if (slotEnd.getHours() > endHour) continue;
      
      slots.push({
        start: slotStart,
        end: slotEnd,
        time: `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`
      });
    }
  }
  return slots;
}

// Tạo các time slots từ 8:00 đến 17:00
document.querySelector('input[name="date"]').addEventListener('change', async function(e) {
  const date = e.target.value;
  const timeSelect = document.querySelector('select[name="time"]');
  
  try {
    // Lấy danh sách các lịch hẹn trong ngày
    const response = await fetch(`/api/slots?date=${date}&userId=<%= link.user_id %>`);
    const appointments = await response.json();

    // Tạo danh sách các slot
    const slots = generateTimeSlots(date, <%= link.duration %>);

    // Reset select
    timeSelect.innerHTML = '<option value="">Chọn thời gian</option>';

    // Thêm các options
    slots.forEach(slot => {
      if (!isSlotOverlap(slot, appointments)) {
        const option = document.createElement('option');
        option.value = slot.time;
        option.textContent = slot.time;
        timeSelect.appendChild(option);
      }
    });

    // Thông báo nếu không có slot trống
    if (timeSelect.options.length === 1) {
      timeSelect.innerHTML = '<option value="">Không có thời gian trống trong ngày này</option>';
    }
  } catch (error) {
    console.error('Lỗi:', error);
    timeSelect.innerHTML = '<option value="">Lỗi khi tải thời gian</option>';
  }
});
</script>

<%- include('../partials/footer') %> 